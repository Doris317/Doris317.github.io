<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Doris的搬砖日记</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-03-24T13:43:44.957Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Doris</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>断言Assert</title>
    <link href="http://example.com/2021/03/24/%E6%96%AD%E8%A8%80Assert/"/>
    <id>http://example.com/2021/03/24/%E6%96%AD%E8%A8%80Assert/</id>
    <published>2021-03-24T03:19:18.000Z</published>
    <updated>2021-03-24T13:43:44.957Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="java、C++" scheme="http://example.com/categories/java%E3%80%81C/"/>
    
    
  </entry>
  
  <entry>
    <title>java.nio.bytebuffer解析</title>
    <link href="http://example.com/2021/03/23/java-nio-bytebuffer%E8%A7%A3%E6%9E%90/"/>
    <id>http://example.com/2021/03/23/java-nio-bytebuffer%E8%A7%A3%E6%9E%90/</id>
    <published>2021-03-23T11:52:37.000Z</published>
    <updated>2021-03-23T13:51:32.412Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;ByteBuffer继承自抽象类Buffer，用于在堆内存中预留一部分空间对IO数据做临时存储，以提高读写效率。与CharBuffer、IntBuffer等Buffer的其他子类的&lt;br&gt;区别在于数据类型的不同，但是关于缓冲区读写区域的管理全部由父类Buffer负责。&lt;br</summary>
        
      
    
    
    
    <category term="java" scheme="http://example.com/categories/java/"/>
    
    
    <category term="网络通信" scheme="http://example.com/tags/%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>RocketMQ解析二</title>
    <link href="http://example.com/2021/03/23/RocketMQ%E8%A7%A3%E6%9E%90%E4%BA%8C/"/>
    <id>http://example.com/2021/03/23/RocketMQ%E8%A7%A3%E6%9E%90%E4%BA%8C/</id>
    <published>2021-03-23T03:24:53.000Z</published>
    <updated>2021-03-23T03:36:06.556Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>进程创建与退出</title>
    <link href="http://example.com/2021/03/22/%E8%BF%9B%E7%A8%8B%E5%88%9B%E5%BB%BA%E4%B8%8E%E9%80%80%E5%87%BA/"/>
    <id>http://example.com/2021/03/22/%E8%BF%9B%E7%A8%8B%E5%88%9B%E5%BB%BA%E4%B8%8E%E9%80%80%E5%87%BA/</id>
    <published>2021-03-22T08:49:20.000Z</published>
    <updated>2021-03-22T15:13:13.898Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="OS" scheme="http://example.com/categories/OS/"/>
    
    
    <category term="OS" scheme="http://example.com/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>C++学习之__attribute__机制</title>
    <link href="http://example.com/2021/03/17/C-%E5%AD%A6%E4%B9%A0%E4%B9%8B-attribute/"/>
    <id>http://example.com/2021/03/17/C-%E5%AD%A6%E4%B9%A0%E4%B9%8B-attribute/</id>
    <published>2021-03-17T07:24:08.000Z</published>
    <updated>2021-03-17T13:48:39.885Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;__attribute__是GNU C特色之一，可以设置函数属性（Function Attribute ）、变量属性（Variable Attribute ）和类型属性（Type Attribute)等.&lt;/p&gt;
&lt;p&gt;语法格式： __attribute</summary>
        
      
    
    
    
    <category term="C++" scheme="http://example.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>RocketMQ源码解析之RemotingCommand</title>
    <link href="http://example.com/2021/03/11/RocketMQ%E4%B9%8BRemotingCommand/"/>
    <id>http://example.com/2021/03/11/RocketMQ%E4%B9%8BRemotingCommand/</id>
    <published>2021-03-11T04:08:28.000Z</published>
    <updated>2021-03-24T03:16:25.678Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;rocketmq-remoting模块是RocketMQ消息队列中负责网络通信的模块，底层框架是依赖于Netty的。&lt;br&gt;&lt;br&gt;为了实现客户端与服务器之间高效的数据请求与接收，RocketMQ自定义了通信协议。&lt;/p&gt;
&lt;h1 id=&quot;通信协议及编解码方式&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="消息队列" scheme="http://example.com/categories/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/"/>
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>链表反转系列</title>
    <link href="http://example.com/2019/04/05/%E9%93%BE%E8%A1%A8%E5%8F%8D%E8%BD%AC%E7%B3%BB%E5%88%97/"/>
    <id>http://example.com/2019/04/05/%E9%93%BE%E8%A1%A8%E5%8F%8D%E8%BD%AC%E7%B3%BB%E5%88%97/</id>
    <published>2019-04-05T05:04:07.000Z</published>
    <updated>2021-03-18T05:08:36.756Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;剑指-Offer-24-反转链表&quot;&gt;&lt;a href=&quot;#剑指-Offer-24-反转链表&quot; class=&quot;headerlink&quot; title=&quot;剑指 Offer 24. 反转链表&quot;&gt;&lt;/a&gt;剑指 Offer 24.</summary>
        
      
    
    
    
    <category term="算法题" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E9%A2%98/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>C++之extern</title>
    <link href="http://example.com/2019/03/17/C-%E4%B9%8Bextern/"/>
    <id>http://example.com/2019/03/17/C-%E4%B9%8Bextern/</id>
    <published>2019-03-17T13:58:38.000Z</published>
    <updated>2021-03-18T13:22:45.238Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;extern可以置于变量或者函数前，以标示变量或者函数的定义在别的文件中，提示编译器遇到此变量和函数时在其他模块中寻找其定义。&lt;br&gt;此外extern也可用来进行链接指定。&lt;/p&gt;
&lt;h1 id=&quot;用法&quot;&gt;&lt;a href=&quot;#用法&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="C++" scheme="http://example.com/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>Annotation(java注解)</title>
    <link href="http://example.com/2018/03/18/Annotation-java%E6%B3%A8%E8%A7%A3/"/>
    <id>http://example.com/2018/03/18/Annotation-java%E6%B3%A8%E8%A7%A3/</id>
    <published>2018-03-18T12:04:24.000Z</published>
    <updated>2021-03-18T13:20:34.102Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;注解提供一种为程序元素设置元数据的方法。元数据就是关于数据的数据，可以用来生成文档，进行代码分析或者使编译器对元数据进行编译检查。&lt;br&gt;可以使用注解解析工具或编译器对其进行解析，也可以指定注解在编译期或运行期有效。&lt;br&gt;　　　　　　　　　　　　　　　　　　　　　　&lt;br</summary>
        
      
    
    
    
    
  </entry>
  
</feed>
